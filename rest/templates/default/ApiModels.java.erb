package com.spring.rest.model;

import java.io.Serializable;
import java.util.Date;

import javax.validation.constraints.NotNull;

import com.fasterxml.jackson.annotation.JsonInclude;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;


@Data // Generates getters, setters, toString, equals, hashCode
@NoArgsConstructor // Generates a no-argument constructor (required by Jackson for deserialization)
@AllArgsConstructor // Generates a constructor with all fields
@JsonInclude(JsonInclude.Include.NON_NULL) 
public class <%= @file_name.to_s[0].upcase + @file_name.to_s[1, @file_name.length] %> implements Serializable {


<% @fields.each do |field| -%>
    private <%= map_java_type(field['type']) %> <%= field["name"][0].downcase + field["name"][1, field["name"].length] %>;
<% end -%>


/*

<% @fields.each do |field| -%>
    <% # Check for attributes and generate corresponding annotations %>
    <% if field['pk'] -%>
    @Id
    <% end -%>
    <% if field['increment'] -%>
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    <% end -%>
    <% if field['unique'] -%>
    @Column(unique = true)
    <% end -%>
    <% if field['secure'] -%>
    @Secure
    <% end -%>
    <% if field['not_null'] -%>
    @NotNull
    <% end -%>
    private <%= map_java_type(field['type']) %> <%= field["name"][0].downcase + field["name"][1..-1] %>;
<% end -%>

*/

<% @fields.each do |field| -%>
    public <%= map_java_type(field['type']) %> get<%= field["name"][0].upcase + field["name"][1, field["name"].length] %>() {
        return <%= field["name"][0].downcase + field["name"][1, field["name"].length] %>;
    }

    public void set<%= field["name"][0].upcase + field["name"][1, field["name"].length] %>( <%= map_java_type(field['type']) %> <%= field["name"][0].downcase + field["name"][1, field["name"].length] %>) {
        this.<%= field["name"][0].downcase + field["name"][1, field["name"].length] %> = <%= field["name"][0].downcase + field["name"][1, field["name"].length] %>;
    }
<% end -%>
}